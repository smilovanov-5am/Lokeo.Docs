@startuml

skinparam linetype ortho

package Context
{
    !startsub Main
    entity "PersonIdentity | Лицо" as PersonIdentity {
        |<#FF8080> guid |= Id | Id лица |
        --
        |<#FF8080> guid |= CounterpartyId | Id паспорта |
        |<#FF8080> struct:PersonIdentitySocialRating |= SocialRating | Социальный рейтинг |
        |<#FF8080> list:PersonContact |= PersonContacts | Контакты лица |
        --
        | string |= FirstName | Имя |
        | string |= MiddleName | Отчество |
        | string |= LastName | Фамилия |
    }
    !endsub

    struct "PersonContact | Контакт лица" as PersonContact {
        |<#FF8080> string |= Value | Значение |
        | enum:ContactType |= ContactType | Тип контакта |
        | bool |= UseForMailing | Использовать для рассылки |
    }

    struct "PersonIdentitySocialRating |  Социальный рейтинг" as PersonIdentitySocialRating {
        |<#FF8080> enum:PersonEmotionalStatus |= EmotionalStatus | Эмоциональный статус |
        |<#FF8080> string |= Comment | Комментарий |
    }
}
newpage
package Counterparty
{
    entity "PersonCounterparty | Паспорт лица" as PersonCounterparty {
        |<#FF8080> guid |= Id | Id паспорта |
        --
        |<#FF8080> guid |= PersonIdentityId | Id лица |
        |<#FF8080> bool |= IsCounterparty | Есть паспорт |
        |<#FF8080> enum:IdentityDocumentType |= IdentityDocumentType | Тип документа |
        |struct:PersonRussianPassportIdentityDocument |= RussianPassport | Паспорт РФ |
        |struct:PersonForeignPassportIdentityDocument |= ForeignPassport | Иностранный паспорт |
        |struct:PersonRussianBirthCertificateIdentityDocument |= RussianBirthCertificate | Свидетельство о рождении РФ |
        |struct:PersonRussianResidencePermitIdentityDocument |= RussianResidencePermit | ВНЖ РФ |
    }


    struct "PersonRussianPassportIdentityDocument | Паспорт РФ" as PersonRussianPassportIdentityDocument
    {
        |<#FF8080> string |= Series | Серия паспорта |
        |<#FF8080> string |= Number | Номер паспорта |
        |<#FF8080> string |= DepartmentCode | Код подразделения |
        |<#FF8080> string |= Issuer | Орган выдачи |
        |<#FF8080> date |= IssueDate | Дата выдачи |
        |<#FF8080> enum:Sex |= Sex | Пол |
        |<#FF8080> date |= BirthDate | Дата рождения |
        |<#FF8080> string |= BirthPlace | Место рождения |
        |<#FF8080> string |= RegistrationAddress | Адрес регистрации |
    }

    struct "PersonForeignPassportIdentityDocument | Иностранный паспорт" as PersonForeignPassportIdentityDocument
    {
        |<#FF8080> string |= Citizenship | Гражданство |
        |<#FF8080> string |= Number | Номер паспорта |
        |<#FF8080> string |= Issuer | Орган выдачи |
        |<#FF8080> date |= IssueDate | Дата выдачи |
        |<#FF8080> enum:Sex |= Sex | Пол |
        |<#FF8080> date |= BirthDate | Дата рождения |
        |<#FF8080> string |= BirthPlace | Место рождения |
        |<#FF8080> string |= RegistrationAddress | Адрес регистрации |
    }

    struct "PersonRussianBirthCertificateIdentityDocument | Свидетельство о рождении РФ" as PersonRussianBirthCertificateIdentityDocument
    {
        |<#FF8080> string |= Series | Серия паспорта |
        |<#FF8080> string |= Number | Номер паспорта |
        |<#FF8080> string |= Issuer | Орган выдачи |
        |<#FF8080> date |= IssueDate | Дата выдачи |
        |<#FF8080> enum:Sex |= Sex | Пол |
        |<#FF8080> date |= BirthDate | Дата рождения |
        |<#FF8080> string |= BirthPlace | Место рождения |
    }

    struct "PersonRussianResidencePermitIdentityDocument | ВНЖ РФ" as PersonRussianResidencePermitIdentityDocument
    {
        |<#FF8080> string |= Citizenship | Гражданство |
        |<#FF8080> string |= DecisionNumber | Номер решения ВНЖ |
        |<#FF8080> date |= DecisionDate | Дата решения |
        |<#FF8080> string |= Series | Серия паспорта |
        |<#FF8080> string |= Number | Номер паспорта |
        |<#FF8080> string |= DepartmentCode | Код подразделения |
        |<#FF8080> string |= Issuer | Орган выдачи |
        |<#FF8080> date |= IssueDate | Дата выдачи |
        |<#FF8080> enum:Sex |= Sex | Пол |
        |<#FF8080> date |= BirthDate | Дата рождения |
        |<#FF8080> string |= BirthPlace | Место рождения |
        |<#FF8080> string |= RegistrationAddress | Адрес регистрации |
    }
}

newpage
package enums 
{
    enum "ContactType | Тип контакта" as ContactType {
        |= PhoneNumber | Телефон |
        |= Email | Email |
    }

    enum "PersonEmotionalStatus | Эмоциональный статус" as PersonEmotionalStatus {
        |= Neutral | Нейтральный |
        |= Positive | Положительный |
        |= Negative | Отрицательный |
    }

    enum "IdentityDocumentType | Тип документа" as IdentityDocumentType {
        |= NoDocument | Документ отсутствует |
        |= RussianPassport | Паспорт РФ |
        |= ForeignPassport | Иностранный паспорт |
        |= RussianResidencePermit | ВНЖ РФ |
        |= RussianBirthCertificate | Свидетельство о рождении РФ |
    }

    enum "Sex | Пол" as Sex {
        |= Female | Женский |
        |= Male | Мужской |
    }
}

PersonContact "<<много>>" -- "<<1>>" PersonIdentity : < имеет
PersonIdentitySocialRating "<<1>>" -- "<<1>>" PersonIdentity : < имеет
PersonCounterparty "**<color green><<1>></color>**" -- "**<color green><<1>></color>**" PersonIdentity : < имеет
PersonRussianPassportIdentityDocument "<<0..1>>" -- "<<1>>" PersonCounterparty : < имеет
PersonForeignPassportIdentityDocument "<<0..1>>" -- "<<1>>" PersonCounterparty : < имеет
PersonRussianBirthCertificateIdentityDocument "<<0..1>>" -- "<<1>>" PersonCounterparty : < имеет
PersonRussianResidencePermitIdentityDocument "<<0..1>>" -- "<<1>>" PersonCounterparty : < имеет

@enduml